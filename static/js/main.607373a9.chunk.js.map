{"version":3,"sources":["img/google_books_search.png","components/Header.js","components/MobileNav.js","components/Splash.js","components/About.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js","img/elite_driving_thumbnail.png","img/flixcentral_thumbnail.png"],"names":["module","exports","Header","id","href","onClick","console","log","document","getElementById","style","display","MobileNav","menuCloseBtnHelper","Splash","className","About","Projects","alt","src","google_books_search","elite_driving_thumbnail","flixcentral_thumbnail","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,iD,iLCsB5BC,MAnBf,WAMI,OACI,gCACA,yBAAKC,GAAG,SACR,yBAAKA,GAAG,WACR,uBAAGC,KAAK,aAAR,QACA,uBAAGA,KAAK,UAAR,SACA,uBAAGA,KAAK,YAAR,eAEJ,yBAAKD,GAAG,YAAYE,QAbpB,WACIC,QAAQC,IAAI,wBACdC,SAASC,eAAe,UAAUC,MAAMC,QAAU,UAWN,kBAAC,IAAD,SCSnCC,MAtBf,WAEE,SAASC,IACPP,QAAQC,IAAI,oBACZC,SAASC,eAAe,UAAUC,MAAMC,QAAU,OAIlD,OACI,yBAAKR,GAAG,UACR,yBAAKA,GAAG,WAAWE,QAASQ,GAAoB,4BAAQV,GAAG,YAAX,MAChD,4BACI,4BAAI,uBAAGC,KAAK,YAAYD,GAAG,KAAKE,QAASQ,GAArC,SACJ,4BAAI,uBAAGT,KAAK,SAASD,GAAG,KAAKE,QAASQ,GAAlC,UACJ,4BAAI,uBAAGT,KAAK,WAAWD,GAAG,KAAKE,QAASQ,GAApC,kBCCDC,MAhBf,WACI,OACI,6BAASX,GAAG,SAASY,UAAU,aAC3B,yBAAKZ,GAAG,YACJ,yBAAKA,GAAG,mBAAR,OACA,yBAAKA,GAAG,oBACR,wBAAIA,GAAG,SAAP,yBACA,wBAAIA,GAAG,SAAP,sCCmBDa,MAzBf,WACI,OACI,6BAASb,GAAG,SACZ,yBAAKY,UAAU,aACX,6BAEI,wCACA,6BACA,uqBAUR,yBAAKA,UAAU,aACf,6C,iDCgDOE,MAnEf,WACI,OAEJ,6BAASd,GAAG,YACZ,yBAAKY,UAAU,WACf,oDAEK,6BAAK,iLAGV,yBAAKA,UAAU,YAGf,yBAAKA,UAAU,eACX,mDACA,4EACA,uBAAGA,UAAU,SAAQ,uBAAGX,KAAK,uDAAR,QAArB,IAA4F,uBAAGA,KAAK,iEAAR,UAEhG,yBAAKW,UAAU,OACX,uBAAGX,KAAK,qCACJ,yBAAKc,IAAI,kBAAkBC,IAAKC,MADpC,MAIJ,yBAAKL,UAAU,eACX,uBAAGX,KAAK,qCACJ,yBAAKc,IAAI,kBAAkBC,IAAKE,QAMxC,yBAAKN,UAAU,eACX,6CACA,+FACA,uBAAGA,UAAU,SAAQ,uBAAGX,KAAK,qCAAR,QAArB,IAA0E,uBAAGA,KAAK,0DAAR,UAE9E,yBAAKW,UAAU,cACX,uBAAGX,KAAK,qCACJ,yBAAKc,IAAI,kBAAkBC,IAAKE,MADpC,MASJ,yBAAKN,UAAU,eACX,4CAEA,gKACA,uBAAGA,UAAU,SAAQ,uBAAGX,KAAK,oCAAR,QAArB,IAAyE,uBAAGA,KAAK,yDAAR,UAG7E,yBAAKW,UAAU,OACX,uBAAGX,KAAK,oCAAmC,yBAAKc,IAAI,kBAAkBC,IAAKG,WC5ChEC,MAVf,WACI,OAEJ,4BAAQpB,GAAG,WACH,2EACJ,uE,MCeWqB,MAbf,WACE,OACE,yBAAKT,UAAU,OACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPaU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxB,SAASC,eAAe,SDyHpB,kBAAmBwB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,a,kBEzI5BzC,EAAOC,QAAU,IAA0B,qD,kBCA3CD,EAAOC,QAAU,IAA0B,oD","file":"static/js/main.607373a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google_books_search.19ffb80a.png\";","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction Header() {\r\n    function hamburgerHelper(){\r\n        console.log(\"clicked to open menu\")\r\n      document.getElementById('mobile').style.display = \"block\";\r\n       \r\n      }\r\n    return (\r\n        <header>\r\n        <div id=\"logo\"></div>\r\n        <nav id=\"desktop\">\r\n        <a href=\"#projects\">work</a>\r\n        <a href=\"#about\">about</a>\r\n        <a href=\"#contact\">contact me</a>\r\n        </nav>\r\n    <div id=\"hamburger\" onClick={hamburgerHelper}><MenuIcon/></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","\r\nimport React from 'react';\r\n\r\n\r\nfunction MobileNav () {\r\n    \r\n  function menuCloseBtnHelper(){\r\n    console.log(\"clicked to close\")\r\n    document.getElementById('mobile').style.display = \"none\";\r\n       \r\n  }\r\n\r\n    return (\r\n        <nav id=\"mobile\">\r\n        <div id=\"closeDiv\" onClick={menuCloseBtnHelper}><button id=\"closeBtn\">X</button></div>\r\n        <ul>\r\n            <li><a href=\"#projects\" id=\"m1\" onClick={menuCloseBtnHelper}>work</a></li>\r\n            <li><a href=\"#about\" id=\"m2\" onClick={menuCloseBtnHelper}>about</a></li>\r\n            <li><a href=\"#contact\" id=\"m3\" onClick={menuCloseBtnHelper}>contact me</a></li>\r\n        </ul>\r\n        \r\n        \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default MobileNav;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nfunction Splash() {\r\n    return (   \r\n        <section id=\"splash\" className=\"flexboxed\"> \r\n            <div id=\"terminal\">\r\n                <div id=\"terminal-header\">...</div>\r\n                <div id=\"terminal-content\">\r\n                <h1 id=\"line1\">Hi, my name is George</h1>\r\n                <h1 id=\"line2\">and I'm a Front End Developer.</h1>\r\n            \r\n                </div>\r\n            \r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\n\r\n","\r\nimport React from 'react';\r\n\r\n\r\nfunction About() {\r\n    return (   \r\n        <section id=\"about\">\r\n        <div className=\"flexboxed\">\r\n            <div>\r\n        \r\n                <h1>About Me</h1>\r\n                <hr></hr>\r\n                <p>I am a software developer with a concentration in creating responsive web applications. Currently getting my Master's in CS at Pace Univerisity.\r\n                I'm a former performer/video editor and I got into development making websites and social media graphics \r\n                for my performance projects. I made the switch to development as soon as I touched my first javascript book. \r\n                My passion for creativity, and intuitive workflows inspire me to build all kinds of software, especially\r\n                responsive web applications.\r\n                My hobbies and interests are playing boardgames, video games and bowling.  \r\n                Hiking, camping, roadtrips for whatever reason, Baking and cooking for my peeps</p>\r\n            </div>\r\n          \r\n        </div>\r\n        <div className=\"flexboxed\">\r\n        <button>resume</button>\r\n        </div>\r\n            </section>\r\n    );\r\n}\r\n\r\nexport default About;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport elite_driving_thumbnail from '../img/elite_driving_thumbnail.png';\r\nimport flixcentral_thumbnail from '../img/flixcentral_thumbnail.png';\r\nimport google_books_search from '../img/google_books_search.png'\r\nfunction Projects() {\r\n    return (   \r\n      \r\n<section id=\"projects\">\r\n<div className=\"content\">\r\n<h1>\r\nMy Personal Projects\r\n</h1><hr/><p>I'm passionate about UI/UX design using modern technologies like Javascript and React. Below are a few highlights. You can see others on Github. </p>\r\n</div>\r\n\r\n<div className=\"projects\">\r\n\r\n\r\n<div className=\"description\">\r\n    <h2>Google Books Search</h2>\r\n    <p>A website for searching the google books api.</p>\r\n    <p className=\"links\"><a href=\"https://google-books-api-search-site.herokuapp.com/\">Demo</a> <a href=\"https://github.com/GeorgeChristopherLopez/google-books-search\">Code</a></p>\r\n</div>\r\n<div className=\"pic\">\r\n    <a href=\"https://elitedriving.netlify.app/\">\r\n        <img alt=\"meaningful text\" src={google_books_search}/> </a> \r\n</div>\r\n\r\n<div className=\"pic desktop\">\r\n    <a href=\"https://elitedriving.netlify.app/\">\r\n        <img alt=\"meaningful text\" src={elite_driving_thumbnail}/>\r\n    </a>\r\n</div>\r\n\r\n\r\n\r\n<div className=\"description\">\r\n    <h2>Elite Driving</h2>\r\n    <p>An educational website for practicing for the DMV Exam in React.</p>\r\n    <p className=\"links\"><a href=\"https://elitedriving.netlify.app/\">Demo</a> <a href=\"https://github.com/GeorgeChristopherLopez/elitedriving\">Code</a></p>\r\n</div>\r\n<div className=\"pic mobile\">\r\n    <a href=\"https://elitedriving.netlify.app/\">\r\n        <img alt=\"meaningful text\" src={elite_driving_thumbnail}/> </a> \r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"description\">\r\n    <h2>Flix Central</h2>\r\n\r\n    <p>A movie database application in React. Built with a simple context UI, featuring thumnail Carouseling, all using the Movie DB API</p>\r\n    <p className=\"links\"><a href=\"https://flixcentral.netlify.app/\">Demo</a> <a href=\"https://github.com/GeorgeChristopherLopez/flixcentral\">Code</a></p>\r\n</div>\r\n\r\n<div className=\"pic\">\r\n    <a href=\"https://flixcentral.netlify.app/\"><img alt=\"meaningful text\" src={flixcentral_thumbnail}/></a>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</section>\r\n\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (   \r\n       \r\n<footer id=\"contact\">\r\n        <p>inquires at georgechristopherlopez@gmail.com</p>\r\n    <p>   George Lopez 2020. No rights RSVP'd</p>\r\n    </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\nimport Header from './components/Header';\nimport MobileNav from './components/MobileNav';\nimport Splash from './components/Splash';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Footer from './components/Footer'\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Header />\n       <MobileNav />\n       <Splash/>\n       <About/>\n       <Projects/>\n       <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/elite_driving_thumbnail.13f045ed.png\";","module.exports = __webpack_public_path__ + \"static/media/flixcentral_thumbnail.c878cef8.png\";"],"sourceRoot":""}